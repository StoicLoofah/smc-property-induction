(define A '(
(0.236564 0.141118 0.221042 -0.034306 -0.042968 -0.065319 0.019497 0.176777 )
(-0.219278 0.227541 0.053680 -0.102871 0.013722 0.041195 0.133725 0.176777 )
(-0.115173 -0.227318 0.259536 -0.011486 0.045751 -0.043053 -0.106112 0.176777 )
(-0.033935 -0.033337 -0.126996 0.102923 -0.297033 -0.273179 0.033955 0.176777 )
(0.073447 -0.140758 -0.144977 -0.308605 0.023975 0.066491 0.169897 0.176777 )
(0.031456 -0.053753 -0.030841 0.308627 0.094857 0.172286 0.232895 0.176777 )
(0.010397 0.032807 -0.082331 0.011258 -0.154578 0.281637 -0.299053 0.176777 )
(0.016522 0.053700 -0.149112 0.034458 0.316274 -0.180057 -0.184804 0.176777 )
))

; 4 5 6 7 8
(define names '("platypus" "german shepard" "collie" "persian cat" "siamese cat"))

(define num-animals 8)

(define arguments '(5 7 8 4))
(define conclusion 6)


(define (num->vector num)
	(if (= num 1)
	'(-1 -1 -1 1 1 1 1 1)
  	(append (make-list (- num 1) -1) '(1) (make-list (- num-animals num) -1)))
  )